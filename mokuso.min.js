!function () { var name = "mokuso", _ = new (kendo.Class.extend({ isArray: function (e) { return e && $.isArray(e) ? !0 : e && kendo.isFunction(e.shift) && kendo.isFunction(e.slice) ? !0 : !1 }, isObservableObject: function (e) { return e && "string" == $.type(e.uid) && kendo.isFunction(e.get) && kendo.isFunction(e.set) ? !0 : !1 }, handleModuleHook: function (e, n, t) { for (var r = [], o = 0; o < e.length; o++) $.isFunction(e[o][n]) && r.push(e[o][n].apply(e[o][n], t || [])); return $.when.apply(null, r) }, findNestedViews: function (_node, _parentModel, _renderer) { var _defs = []; return _node.find("*[data-role='" + name + "view']").addBack("*[data-role='" + name + "view']").each(function (i, n) { var _n = $(n), _args = new kendo.data.ObservableObject({}); if ($.trim(_n.attr("data-view-args")).length) { var arrBindFields = [], __args = {}; if (_parentModel) with (_parentModel) try { eval("__args = " + _n.attr("data-view-args")) } catch (ex) { console.error("Argument Parsing Error", "Could not parse inline page arguments: " + _n.attr("data-view-args")) } for (var fProp in __args) { var _type = $.type(__args[fProp]); if ("string" == _type || "number" == _type || "object" == _type) _args.set(fProp, __args[fProp]); else for (var tProp in _parentModel) if (__args[fProp] === _parentModel[tProp]) { arrBindFields.push({ f: fProp, t: tProp }), _args.set(fProp, _parentModel.get(tProp)); break } } arrBindFields.length && _parentModel.bind("change", function (e) { for (var n = 0; n < arrBindFields.length; n++) if (arrBindFields[n].t == e.field) { _args.set(arrBindFields[n].t, this.get(e.field)); break } }) } _defs.push(_renderer.render(_n, _n.attr("data-view"), _args)) }), $.when.apply($, _defs) }, createRenderer: function (e, n, t) { var r = $.type(e); if ("function" == r) { var e = new e(n, t); if (e instanceof _renderer) return e } else if ("string" == $.type(e)) switch (e.toLowerCase()) { case "kendomobile": return new _renderer_KendoMobile(n, t); case "react": return new _renderer_React(n, t); case "knockout": return new _renderer_Knockout(n, t) } return new _renderer_Kendo(n, t) }, createResolver: function (e, n) { var t = $.type(e); if ("function" == t) { var e = new e(n); if (e instanceof _resolver) return e } else if ("string" == $.type(e)) switch (e.toLowerCase()) { case "browserify": return new _renderer_Browserify(n) } return new _resolver_RequireJS(n) } })), _renderer = kendo.Class.extend({ options: {}, resolver: null, init: function (e, n) { this.options = e, this.resolver = n }, render: function () { } }), _renderer_Kendo = _renderer.extend({ render: function (e, n, t) { if (!("string" != $.type(n) || $.trim(n).length <= 0 || "object" != $.type(e))) { var r = this, o = $.Deferred(), i = n.indexOf("?"), s = i > 0 ? n.substring(0, i) : n, a = _.isObservableObject(t) ? t : new kendo.data.ObservableObject($.isPlainObject(t) ? t : {}), l = e; e instanceof $ || (l = $(e)); var d = l.find("*[data-role='" + name + "view']"); l.data(name + "View") && d.push(l); var u = null; if (d.length) { var p = $.Deferred(); u = $.Deferred(); var f = $.map(d, function (e) { var n = $(e); return { depth: n.parents().length, node: n } }).sort(function (e, n) { return n.depth - e.depth }).reduce(function (e, n) { return e.then(function () { return n.node.data(name + "View").model.deinit(n.node) }) }, p); f.always(function () { l.data(name + "View").destroy(), l.empty() }).always(function () { return r.resolver.resolve(r.options.paths.view + "/" + s + ".html").fail(function (e) { u.rejectWith(null, [e]) }).then(function (e) { u.resolveWith(null, [e]) }) }), p.resolve() } else u = this.resolver.resolve(this.options.paths.view + "/" + s + ".html"); return this.resolver.resolve(this.options.paths.viewmodel + "/" + s + ".js").then(function (e) { var n = kendo.observable($.extend(!0, { preinit: function () { }, init: function () { }, __________init: function (e) { return this.init(e.view.element, e.sender.params) }, deinit: function () { } }, e)); u.then(function (e) { return r._wireTogether(l, s, a, e, n, o) }).fail(function () { o.rejectWith(null, arguments) }) }).fail(function () { o.rejectWith(null, arguments) }), o } }, _wireTogether: function (e, n, t, r, o, i) { var s = this, a = new kendo.View("<div>" + r + "</div>", { model: o, init: function () { var e = this, r = this.element.parent(); r.attr("data-role", name + "view"), r.attr("data-view", n), $.when(this.model.init(this.element, t)).always(function () { _.findNestedViews(e.element, e.model, s).then(function () { i.resolve() }).fail(function () { i.rejectWith(null, arguments) }) }) }, wrap: !1 }); return e.data(name + "View", a), $.when(o.preinit(e, t)).then(function () { var n = e.parents("*[data-role='" + name + "view']:first").data(name + "View"); n && n instanceof kendo.Layout ? n.showIn(a, e) : a.render(e) }) } }), _renderer_KendoMobile = _renderer_Kendo.extend({ _firstGo: !0, _wireTogether: function (e, n, t, r, o, i) { var s = this; if (0 == this._firstGo) { var a = $(r), l = "a" + kendo.guid().replace(new RegExp("-", "g"), ""); return Class.GlobalMobileModels[l] = o, a.each(function () { var e = $(this), n = $.trim(e.attr("data-role") || "").toLowerCase(); if (n.length && (e.attr("data-model", name + ".GlobalMobileModels." + l), "view" == n)) { var t = (e.attr("data-bind") || "").replace(new RegExp("events([ ]{0,}):([ ]{0,}){", "i"), "events:{"), r = t.indexOf("events:{"); r > -1 ? e.attr("data-bind", t.substring(0, r + 8) + " init: __________init, " + t.substring(r + 8, t.length)) : e.attr("data-bind", $.merge(t.length ? t.split(",") : [], ["events: { init: __________init }"]).join(",")) } }), $.when(o.preinit(e, t)).then(function () { var n = a.insertAfter(e); return _.findNestedViews(n, o, s).then(function () { i.resolve() }).fail(function () { i.rejectWith(null, arguments) }) }) } return this._firstGo = !1, _renderer_Kendo.fn._wireTogether.apply(s, arguments) } }), _renderer_React = _renderer.extend({ render: function (e, n) { var t = $.Deferred(); return this.resolver.resolve(this.options.paths.view + "/" + n + ".js").then(function (n) { React.unmountComponentAtNode(e[0]), React.render(n, e[0], function () { t.resolve() }) }).fail(function () { t.rejectWith(null, arguments) }), t } }), _renderer_Knockout = _renderer.extend({ render: function (e, n) { var t = $.Deferred(); return $.when(this.resolver.resolve(this.options.paths.view + "/" + n + ".html"), this.resolver.resolve(this.options.paths.viewmodel + "/" + n + ".js")).then(function (n, t) { for (var r in t) _.isArray(t[r]) ? t[r] = ko.observableArray(t[r]) : $.isFunction(t[r]) || (t[r] = ko.observable(t[r])); ko.cleanNode(e[0]), e.html(n), ko.applyBindings(t, e[0]) }).fail(function () { t.rejectWith(null, arguments) }), t } }); _resolver = kendo.Class.extend({ options: null, init: function (e) { this.options = e }, resolve: function () { throw "resolver didnt provide a resolve method." } }), _resolver_JQuery = _resolver.extend({ resolve: function (e) { var n = null; return n = e.match("js$") ? $.ajax({ url: e, dataType: "script" }).promise() : $.ajax({ url: e }).promise() } }), _resolver_RequireJS = _resolver.extend({ resolve: function (e) { var n = null; return e.match("js$") ? (n = $.Deferred(), require([e.replace(new RegExp(".js$"), "")], function (e) { n.resolveWith(null, [e]) }, function () { n.rejectWith(null, arguments) })) : n = $.ajax({ url: require.toUrl(e) }).promise(), n } }), _resolver_Browserify = _resolver.extend({ resolve: function (e) { var n = null; return n = e.match(".js$") ? $.Deferred().resolveWith(null, [require(e.replace(new RegExp(".js$"), ""))]) : $.ajax({ url: e }).promise() } }); var Class = kendo.Class.extend({ options: {}, events: ["init", "before-navigate", "after-navigate", "before-load", "after-load"], router: null, mobileApp: null, modules: [], _events: $({}), _renderer: null, _resolver: null, init: function (e, n, t) { var r = this; this.options = $.extend({ node: $("body"), initial: null, init: null, transition: null, root: "/", pushState: !1, hashBang: !1, modules: [], paths: { view: "view", viewmodel: "viewmodel" }, renderer: "kendo", resolver: "requirejs" }, n), e && (this.options.node = e); for (var o = 0; o < this.options.modules.length; o++) this.registerModule(this.options.modules[o]); r._resolver = _.createResolver(r.options.resolver, r.options), r._renderer = _.createRenderer(r.options.renderer, r.options, r._resolver), _.handleModuleHook(this.modules, "beforeInit", [this]).then(function () { if (t && kendo.mobile && kendo.mobile.Application) { var e = $.Deferred(); return "string" == $.type(r.options.initial) && $.trim(r.options.initial).length > 0 ? r.load(r.options.node, n.initial, {}, _.createRenderer("kendomobile", r.options)).then(function () { r.options.node.prepend($("*[data-role='" + name + "view']:first").data(name + "View").element.children()), r.mobileApp = new kendo.mobile.Application(r.options.node, $.extend($.extend({}, r.options), { initial: null, init: function () { setTimeout(function () { e.resolve() }, 10) } })) }) : r.mobileApp = new kendo.mobile.Application(r.options.node, $.extend($.extend({}, r.options), { init: function () { setTimeout(function () { e.resolve() }, 10) } })), $.when(e).then(function () { r.router = r.mobileApp.router, r.router.bind("change", function (e) { r.trigger("before-navigate", [e.url, r.options.node]), setTimeout(function () { r.trigger("after-navigate", [e.url, r.options.node]) }, 10) }) }) } r.router = new kendo.Router({ pushState: r.options.pushState, hashBang: r.options.hasBang, root: r.options.root }), r.router.route("*page", function (e, n) { _.handleModuleHook(r.modules, "beforeNavigate", [r.options.node, e, n]).then(function () { r.trigger("before-navigate", [e, r.options.node]), $.when(r._renderer.render(r.options.node, e, n)).fail(function (e) { r.router.trigger("routeMissing", e) }).then(function () { r.trigger("after-navigate", [e, r.options.node]) }) }).then(function () { return _.handleModuleHook(r.modules, "afterNavigate", [r.options.node, e, n]) }) }); var o = location.href.indexOf("#"); $.trim(r.options.initial).length && (0 > o || o == location.href.length - 1) && (location.href = 0 > o ? location.href + "#" + r.options.initial : location.href.substring(0, o) + "#" + r.options.initial) }).then(function () { return _.handleModuleHook(r.modules, "afterInit", [r]).then(function () { r.mobileApp || r.router.start(), $.isFunction(r.options.init) && r.options.init(r) }) }) }, registerModule: function (e) { e instanceof Class.Module && 0 == $.grep(this.modules, function (n) { return e === n }).length ? this.modules.push(e) : console.error("Module is not an extension of " + name + ".Module") }, deregisterModule: function (e) { e instanceof Class.Module && $.grep(this.modules, function (n) { return e === n }).length >= 1 ? this.modules = $.grep(function (n) { return e !== n }) : console.error("Module is not an extension of " + name + ".Module") }, navigate: function (e) { return this.router ? "string" == $.type(e) && $.trim(e).length > 0 ? this.mobileApp ? this.mobileApp.navigate.apply(this.mobileApp, arguments) : this.router.navigate.apply(this.router, arguments) : void console.error("Arguments Exception", "Page is empty; Usage: navigate(String page)") : void console.error("App not initialized: call initialize(DomNode contentNode, JSON options)") }, replace: function (e) { return this.router ? "string" == $.type(e) && $.trim(e).length > 0 ? this.mobileApp ? this.mobileApp.replace.apply(this.mobileApp, arguments) : this.router.replace.apply(this.router, arguments) : void console.error("Arguments Exception", "Page is empty; Usage: replace(String page)") : void console.error("App not initialized: call initialize(DomNode contentNode, JSON options)") }, load: function (e, n, t, r) { var o = this, i = this._renderer; return (r instanceof _renderer || r instanceof _renderer_Kendo) && (i = r), "string" == $.type(n) && $.trim(n).length > 0 && "object" == $.type(e) ? _.handleModuleHook(this.modules, "beforeLoad", [e, n, t]).then(function () { return o.trigger("before-load", [e, n, t]), $.when(i.render.apply(i, [e, n, t])) }).then(function () { return _.handleModuleHook(o.modules, "afterLoad", [e, n, t]).then(function () { o.trigger("after-load", [e, n, t]) }) }) : void console.error("Arguments Exception", "Page is empty or node is not a DOM element; Usage: load(String page, DomNode node)") }, showLoading: function () { this.mobileApp ? this.mobileApp.showLoading() : kendo.ui.progress(this.options.node, !0) }, hideLoading: function () { kendo.ui.progress(this.options.node, !1), this.mobileApp && this.mobileApp.hideLoading() }, bind: function (e, n) { "string" == $.type(e) && $.trim(e).length > 0 && $.isFunction(n) ? this.mobileApp ? this.mobileApp.bind.apply(this.mobileApp, arguments) : this._events.bind.apply(this._events, arguments) : console.error("Arguments Exception", "Event is empty or method is not a function; Usage: bind(String event, Function method, ...)") }, trigger: function (e) { "string" == $.type(e) && $.trim(e).length > 0 ? this.mobileApp ? this.mobileApp.trigger.apply(this.mobileApp, arguments) : this._events.trigger.apply(this._events, arguments) : console.error("Arguments Exception", "Event is empty ; Usage: bind(String event, ...)") } }); kendo.isArray = _.isArray, kendo.isObservableObject = _.isObservableObject, kendo.mobile && (kendo.mobile.isArray = _.isArray, kendo.mobile.isObservableObject = _.isObservableObject), Class.Renderer = _renderer, Class.Resolver = _resolver, Class.Module = kendo.Class.extend({ beforeInit: function () { }, afterInit: function () { }, beforeNavigate: function () { }, afterNavigate: function () { }, beforeLoad: function () { }, afterLoad: function () { } }), Class.GlobalMobileModels = {}, window[name] = Class, "function" == typeof define && define.amd ? define(function () { return Class }) : "undefined" != typeof module && module.exports && (module.exports = Class) }();